ARM GAS  C:\Users\pierc\AppData\Local\Temp\cc1Vyl0O.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"FloatToChar.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_i2d
  18              		.global	__aeabi_ddiv
  19              		.global	__aeabi_dcmpge
  20              		.global	__aeabi_d2iz
  21              		.section	.text.float_char,"ax",%progbits
  22              		.align	1
  23              		.global	float_char
  24              		.arch armv7e-m
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  28              		.fpu fpv4-sp-d16
  30              	float_char:
  31              	.LVL0:
  32              	.LFB0:
  33              		.file 1 "Core/Src/FloatToChar.c"
   1:Core/Src/FloatToChar.c **** #include "FloatToChar.h"
   2:Core/Src/FloatToChar.c **** #include "math.h"
   3:Core/Src/FloatToChar.c **** //want to take the floating point rounded to 2 decimal places
   4:Core/Src/FloatToChar.c **** //and convert it to char to be printed to the lcd
   5:Core/Src/FloatToChar.c **** //This can be done by add the float to '0'
   6:Core/Src/FloatToChar.c **** void float_char(char *buff, float y)
   7:Core/Src/FloatToChar.c **** {
  34              		.loc 1 7 1 view -0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 0, uses_anonymous_args = 0
  38              		.loc 1 7 1 is_stmt 0 view .LVU1
  39 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 32
  42              		.cfi_offset 3, -32
  43              		.cfi_offset 4, -28
  44              		.cfi_offset 5, -24
  45              		.cfi_offset 6, -20
  46              		.cfi_offset 7, -16
  47              		.cfi_offset 8, -12
  48              		.cfi_offset 9, -8
  49              		.cfi_offset 14, -4
  50 0004 0546     		mov	r5, r0
   8:Core/Src/FloatToChar.c ****     //deal with decimals and units in front of decimal point
ARM GAS  C:\Users\pierc\AppData\Local\Temp\cc1Vyl0O.s 			page 2


   9:Core/Src/FloatToChar.c ****     //decimals
  10:Core/Src/FloatToChar.c ****     int dec; 
  51              		.loc 1 10 5 is_stmt 1 view .LVU2
  11:Core/Src/FloatToChar.c ****     //units in front of decimal
  12:Core/Src/FloatToChar.c ****     int units;
  52              		.loc 1 12 5 view .LVU3
  13:Core/Src/FloatToChar.c ****     //have to consider negative floats as well 
  14:Core/Src/FloatToChar.c ****     //dealing with floats from -99->99
  15:Core/Src/FloatToChar.c ****     //dealing with units left of decimal first positive and negative
  16:Core/Src/FloatToChar.c ****     if(y<0)
  53              		.loc 1 16 5 view .LVU4
  54              		.loc 1 16 7 is_stmt 0 view .LVU5
  55 0006 B5EEC00A 		vcmpe.f32	s0, #0
  56 000a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  57 000e 2ED4     		bmi	.L12
  17:Core/Src/FloatToChar.c ****     {
  18:Core/Src/FloatToChar.c ****         //only want to deal with max 4 digits
  19:Core/Src/FloatToChar.c ****         dec = ((int)(y*-100))%100;
  20:Core/Src/FloatToChar.c ****         units = (int)(y*-1);
  21:Core/Src/FloatToChar.c ****         *buff++ = '-';
  22:Core/Src/FloatToChar.c ****       
  23:Core/Src/FloatToChar.c ****       
  24:Core/Src/FloatToChar.c ****     }
  25:Core/Src/FloatToChar.c ****     else 
  26:Core/Src/FloatToChar.c ****     {
  27:Core/Src/FloatToChar.c ****         dec = ((int)(y*100))%100;
  58              		.loc 1 27 9 is_stmt 1 view .LVU6
  59              		.loc 1 27 23 is_stmt 0 view .LVU7
  60 0010 DFED457A 		vldr.32	s15, .L14+8
  61 0014 60EE277A 		vmul.f32	s15, s0, s15
  62              		.loc 1 27 16 view .LVU8
  63 0018 FDEEE77A 		vcvt.s32.f32	s15, s15
  64 001c 17EE903A 		vmov	r3, s15	@ int
  65              		.loc 1 27 13 view .LVU9
  66 0020 424A     		ldr	r2, .L14+12
  67 0022 82FB0312 		smull	r1, r2, r2, r3
  68 0026 DF17     		asrs	r7, r3, #31
  69 0028 C7EB6217 		rsb	r7, r7, r2, asr #5
  70 002c 6422     		movs	r2, #100
  71 002e 02FB1737 		mls	r7, r2, r7, r3
  72              	.LVL1:
  28:Core/Src/FloatToChar.c ****         units = (int)(y*1);
  73              		.loc 1 28 9 is_stmt 1 view .LVU10
  74              		.loc 1 28 15 is_stmt 0 view .LVU11
  75 0032 FDEEC07A 		vcvt.s32.f32	s15, s0
  76 0036 17EE906A 		vmov	r6, s15	@ int
  77              	.LVL2:
  78              	.L4:
  29:Core/Src/FloatToChar.c ****     }
  30:Core/Src/FloatToChar.c ****     //only need 4 values, easiest way to do this is line by line since looking for specific output.
  31:Core/Src/FloatToChar.c ****     //*buff++ == assign value to dereferenced pointer then increment pointer
  32:Core/Src/FloatToChar.c ****     int i = 0;
  79              		.loc 1 32 5 is_stmt 1 view .LVU12
  33:Core/Src/FloatToChar.c ****     while((units/pow(10,i))>=1)
  80              		.loc 1 33 5 view .LVU13
  32:Core/Src/FloatToChar.c ****     while((units/pow(10,i))>=1)
  81              		.loc 1 32 9 is_stmt 0 view .LVU14
ARM GAS  C:\Users\pierc\AppData\Local\Temp\cc1Vyl0O.s 			page 3


  82 003a 0024     		movs	r4, #0
  83              	.LVL3:
  84              	.L5:
  85              		.loc 1 33 10 is_stmt 1 view .LVU15
  86              		.loc 1 33 18 is_stmt 0 view .LVU16
  87 003c 2046     		mov	r0, r4
  88 003e FFF7FEFF 		bl	__aeabi_i2d
  89              	.LVL4:
  90 0042 41EC110B 		vmov	d1, r0, r1
  91 0046 9FED360B 		vldr.64	d0, .L14
  92 004a FFF7FEFF 		bl	pow
  93              	.LVL5:
  94 004e 59EC108B 		vmov	r8, r9, d0
  95              		.loc 1 33 17 view .LVU17
  96 0052 3046     		mov	r0, r6
  97 0054 FFF7FEFF 		bl	__aeabi_i2d
  98              	.LVL6:
  99 0058 4246     		mov	r2, r8
 100 005a 4B46     		mov	r3, r9
 101 005c FFF7FEFF 		bl	__aeabi_ddiv
 102              	.LVL7:
 103              		.loc 1 33 10 view .LVU18
 104 0060 0022     		movs	r2, #0
 105 0062 334B     		ldr	r3, .L14+16
 106 0064 FFF7FEFF 		bl	__aeabi_dcmpge
 107              	.LVL8:
 108 0068 E0B1     		cbz	r0, .L13
  34:Core/Src/FloatToChar.c ****     {
  35:Core/Src/FloatToChar.c ****         i++;
 109              		.loc 1 35 9 is_stmt 1 view .LVU19
 110              		.loc 1 35 10 is_stmt 0 view .LVU20
 111 006a 0134     		adds	r4, r4, #1
 112              	.LVL9:
 113              		.loc 1 35 10 view .LVU21
 114 006c E6E7     		b	.L5
 115              	.LVL10:
 116              	.L12:
  19:Core/Src/FloatToChar.c ****         units = (int)(y*-1);
 117              		.loc 1 19 9 is_stmt 1 view .LVU22
  19:Core/Src/FloatToChar.c ****         units = (int)(y*-1);
 118              		.loc 1 19 23 is_stmt 0 view .LVU23
 119 006e DFED317A 		vldr.32	s15, .L14+20
 120 0072 60EE277A 		vmul.f32	s15, s0, s15
  19:Core/Src/FloatToChar.c ****         units = (int)(y*-1);
 121              		.loc 1 19 16 view .LVU24
 122 0076 FDEEE77A 		vcvt.s32.f32	s15, s15
 123 007a 17EE903A 		vmov	r3, s15	@ int
  19:Core/Src/FloatToChar.c ****         units = (int)(y*-1);
 124              		.loc 1 19 13 view .LVU25
 125 007e 2B4A     		ldr	r2, .L14+12
 126 0080 82FB0312 		smull	r1, r2, r2, r3
 127 0084 DF17     		asrs	r7, r3, #31
 128 0086 C7EB6217 		rsb	r7, r7, r2, asr #5
 129 008a 6422     		movs	r2, #100
 130 008c 02FB1737 		mls	r7, r2, r7, r3
 131              	.LVL11:
  20:Core/Src/FloatToChar.c ****         *buff++ = '-';
ARM GAS  C:\Users\pierc\AppData\Local\Temp\cc1Vyl0O.s 			page 4


 132              		.loc 1 20 9 is_stmt 1 view .LVU26
  20:Core/Src/FloatToChar.c ****         *buff++ = '-';
 133              		.loc 1 20 24 is_stmt 0 view .LVU27
 134 0090 B1EE400A 		vneg.f32	s0, s0
 135              	.LVL12:
  20:Core/Src/FloatToChar.c ****         *buff++ = '-';
 136              		.loc 1 20 15 view .LVU28
 137 0094 FDEEC07A 		vcvt.s32.f32	s15, s0
 138 0098 17EE906A 		vmov	r6, s15	@ int
 139              	.LVL13:
  21:Core/Src/FloatToChar.c ****       
 140              		.loc 1 21 9 is_stmt 1 view .LVU29
  21:Core/Src/FloatToChar.c ****       
 141              		.loc 1 21 17 is_stmt 0 view .LVU30
 142 009c 2D23     		movs	r3, #45
 143 009e 05F8013B 		strb	r3, [r5], #1
 144              	.LVL14:
  21:Core/Src/FloatToChar.c ****       
 145              		.loc 1 21 17 view .LVU31
 146 00a2 CAE7     		b	.L4
 147              	.LVL15:
 148              	.L13:
  36:Core/Src/FloatToChar.c ****     }
  37:Core/Src/FloatToChar.c ****     i--;
 149              		.loc 1 37 5 is_stmt 1 view .LVU32
 150              		.loc 1 37 6 is_stmt 0 view .LVU33
 151 00a4 013C     		subs	r4, r4, #1
 152              	.LVL16:
  38:Core/Src/FloatToChar.c ****     while(i>=0)
 153              		.loc 1 38 5 is_stmt 1 view .LVU34
 154              		.loc 1 38 10 is_stmt 0 view .LVU35
 155 00a6 1CE0     		b	.L7
 156              	.L8:
  39:Core/Src/FloatToChar.c ****     {
  40:Core/Src/FloatToChar.c ****         *buff++=(units/(int)pow(10,i))%10 + '0';
 157              		.loc 1 40 9 is_stmt 1 view .LVU36
 158              		.loc 1 40 29 is_stmt 0 view .LVU37
 159 00a8 2046     		mov	r0, r4
 160 00aa FFF7FEFF 		bl	__aeabi_i2d
 161              	.LVL17:
 162 00ae 41EC110B 		vmov	d1, r0, r1
 163 00b2 9FED1B0B 		vldr.64	d0, .L14
 164 00b6 FFF7FEFF 		bl	pow
 165              	.LVL18:
 166 00ba 51EC100B 		vmov	r0, r1, d0
 167              		.loc 1 40 24 view .LVU38
 168 00be FFF7FEFF 		bl	__aeabi_d2iz
 169              	.LVL19:
 170              		.loc 1 40 23 view .LVU39
 171 00c2 96FBF0F0 		sdiv	r0, r6, r0
 172              		.loc 1 40 39 view .LVU40
 173 00c6 1C4A     		ldr	r2, .L14+24
 174 00c8 82FB0032 		smull	r3, r2, r2, r0
 175 00cc C317     		asrs	r3, r0, #31
 176 00ce C3EBA203 		rsb	r3, r3, r2, asr #2
 177 00d2 03EB8303 		add	r3, r3, r3, lsl #2
 178 00d6 A0EB4303 		sub	r3, r0, r3, lsl #1
ARM GAS  C:\Users\pierc\AppData\Local\Temp\cc1Vyl0O.s 			page 5


 179              	.LVL20:
 180              		.loc 1 40 43 view .LVU41
 181 00da 3033     		adds	r3, r3, #48
 182              		.loc 1 40 16 view .LVU42
 183 00dc 05F8013B 		strb	r3, [r5], #1
 184              	.LVL21:
  41:Core/Src/FloatToChar.c ****         
  42:Core/Src/FloatToChar.c ****         i--;
 185              		.loc 1 42 9 is_stmt 1 view .LVU43
 186              		.loc 1 42 10 is_stmt 0 view .LVU44
 187 00e0 013C     		subs	r4, r4, #1
 188              	.LVL22:
 189              	.L7:
  38:Core/Src/FloatToChar.c ****     {
 190              		.loc 1 38 10 is_stmt 1 view .LVU45
 191 00e2 002C     		cmp	r4, #0
 192 00e4 E0DA     		bge	.L8
  43:Core/Src/FloatToChar.c ****     }
  44:Core/Src/FloatToChar.c ****     
  45:Core/Src/FloatToChar.c ****         // *buff++=(units/10)%10 + '0';
  46:Core/Src/FloatToChar.c ****         // *buff++=units%10 + '0';
  47:Core/Src/FloatToChar.c ****         *buff++='.';
 193              		.loc 1 47 9 view .LVU46
 194              	.LVL23:
 195              		.loc 1 47 16 is_stmt 0 view .LVU47
 196 00e6 2E23     		movs	r3, #46
 197 00e8 2B70     		strb	r3, [r5]
  48:Core/Src/FloatToChar.c ****         *buff++=(dec/10)%10 + '0';
 198              		.loc 1 48 9 is_stmt 1 view .LVU48
 199              		.loc 1 48 21 is_stmt 0 view .LVU49
 200 00ea 134B     		ldr	r3, .L14+24
 201 00ec 83FB0721 		smull	r2, r1, r3, r7
 202 00f0 FA17     		asrs	r2, r7, #31
 203 00f2 C2EBA102 		rsb	r2, r2, r1, asr #2
 204              		.loc 1 48 25 view .LVU50
 205 00f6 83FB0231 		smull	r3, r1, r3, r2
 206 00fa D317     		asrs	r3, r2, #31
 207 00fc C3EBA103 		rsb	r3, r3, r1, asr #2
 208 0100 03EB8303 		add	r3, r3, r3, lsl #2
 209 0104 A2EB4303 		sub	r3, r2, r3, lsl #1
 210              	.LVL24:
 211              		.loc 1 48 29 view .LVU51
 212 0108 3033     		adds	r3, r3, #48
 213              		.loc 1 48 16 view .LVU52
 214 010a 6B70     		strb	r3, [r5, #1]
  49:Core/Src/FloatToChar.c ****         *buff++=dec%10 + '0';
 215              		.loc 1 49 9 is_stmt 1 view .LVU53
 216              		.loc 1 49 20 is_stmt 0 view .LVU54
 217 010c 02EB8202 		add	r2, r2, r2, lsl #2
 218 0110 A7EB4202 		sub	r2, r7, r2, lsl #1
 219              	.LVL25:
 220              		.loc 1 49 24 view .LVU55
 221 0114 3032     		adds	r2, r2, #48
 222              		.loc 1 49 16 view .LVU56
 223 0116 AA70     		strb	r2, [r5, #2]
  50:Core/Src/FloatToChar.c ****         *buff++='\0';
 224              		.loc 1 50 9 is_stmt 1 view .LVU57
ARM GAS  C:\Users\pierc\AppData\Local\Temp\cc1Vyl0O.s 			page 6


 225              	.LVL26:
 226              		.loc 1 50 16 is_stmt 0 view .LVU58
 227 0118 0023     		movs	r3, #0
 228 011a EB70     		strb	r3, [r5, #3]
  51:Core/Src/FloatToChar.c ****     
  52:Core/Src/FloatToChar.c **** }...
 229              		.loc 1 52 1 view .LVU59
 230 011c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 231              	.LVL27:
 232              	.L15:
 233              		.loc 1 52 1 view .LVU60
 234              		.align	3
 235              	.L14:
 236 0120 00000000 		.word	0
 237 0124 00002440 		.word	1076101120
 238 0128 0000C842 		.word	1120403456
 239 012c 1F85EB51 		.word	1374389535
 240 0130 0000F03F 		.word	1072693248
 241 0134 0000C8C2 		.word	-1027080192
 242 0138 67666666 		.word	1717986919
 243              		.cfi_endproc
 244              	.LFE0:
 246              		.text
 247              	.Letext0:
 248              		.file 2 "c:\\stm32projects\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\9.3.1\\include\\stddef.h"
 249              		.file 3 "c:\\stm32projects\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_types.h"
 250              		.file 4 "c:\\stm32projects\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\reent.h"
 251              		.file 5 "c:\\stm32projects\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\lock.h"
 252              		.file 6 "c:\\stm32projects\\toolchain\\gcc-arm\\arm-none-eabi\\include\\math.h"
ARM GAS  C:\Users\pierc\AppData\Local\Temp\cc1Vyl0O.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 FloatToChar.c
C:\Users\pierc\AppData\Local\Temp\cc1Vyl0O.s:22     .text.float_char:00000000 $t
C:\Users\pierc\AppData\Local\Temp\cc1Vyl0O.s:30     .text.float_char:00000000 float_char
C:\Users\pierc\AppData\Local\Temp\cc1Vyl0O.s:236    .text.float_char:00000120 $d

UNDEFINED SYMBOLS
__aeabi_i2d
__aeabi_ddiv
__aeabi_dcmpge
__aeabi_d2iz
pow
