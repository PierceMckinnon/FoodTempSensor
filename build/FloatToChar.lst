ARM GAS  C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"FloatToChar.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.initialize,"ax",%progbits
  18              		.align	1
  19              		.global	initialize
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	initialize:
  27              	.LFB133:
  28              		.file 1 "Core/Src/FloatToChar.c"
   1:Core/Src/FloatToChar.c **** 
   2:Core/Src/FloatToChar.c **** #include "LiquidCrystal.h"
   3:Core/Src/FloatToChar.c **** #include "FloatToChar.h"
   4:Core/Src/FloatToChar.c **** #include "math.h"
   5:Core/Src/FloatToChar.c **** 
   6:Core/Src/FloatToChar.c **** 
   7:Core/Src/FloatToChar.c **** uint8_t one[8] = {
   8:Core/Src/FloatToChar.c **** 0x00,
   9:Core/Src/FloatToChar.c **** 0x0E,
  10:Core/Src/FloatToChar.c **** 0x04,
  11:Core/Src/FloatToChar.c **** 0x04,
  12:Core/Src/FloatToChar.c **** 0x04,
  13:Core/Src/FloatToChar.c **** 0x04,
  14:Core/Src/FloatToChar.c **** 0x05,
  15:Core/Src/FloatToChar.c **** 0x04
  16:Core/Src/FloatToChar.c **** };
  17:Core/Src/FloatToChar.c **** uint8_t two[8] = {
  18:Core/Src/FloatToChar.c **** 0x00,
  19:Core/Src/FloatToChar.c **** 0x1F,
  20:Core/Src/FloatToChar.c **** 0x02,
  21:Core/Src/FloatToChar.c **** 0x04,
  22:Core/Src/FloatToChar.c **** 0x08,
  23:Core/Src/FloatToChar.c **** 0x10,
  24:Core/Src/FloatToChar.c **** 0x11,
  25:Core/Src/FloatToChar.c **** 0x0E
  26:Core/Src/FloatToChar.c **** };
  27:Core/Src/FloatToChar.c **** uint8_t three[8] = {
  28:Core/Src/FloatToChar.c **** 0x00,
  29:Core/Src/FloatToChar.c **** 0x0D,
  30:Core/Src/FloatToChar.c **** 0x20,
ARM GAS  C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s 			page 2


  31:Core/Src/FloatToChar.c **** 0x10,
  32:Core/Src/FloatToChar.c **** 0x08,
  33:Core/Src/FloatToChar.c **** 0x04,
  34:Core/Src/FloatToChar.c **** 0x08,
  35:Core/Src/FloatToChar.c **** 0x1F
  36:Core/Src/FloatToChar.c **** };
  37:Core/Src/FloatToChar.c **** uint8_t four[8] = {
  38:Core/Src/FloatToChar.c **** 0x00,
  39:Core/Src/FloatToChar.c **** 0x08,
  40:Core/Src/FloatToChar.c **** 0x08,
  41:Core/Src/FloatToChar.c **** 0x1F,
  42:Core/Src/FloatToChar.c **** 0x09,
  43:Core/Src/FloatToChar.c **** 0x0A,
  44:Core/Src/FloatToChar.c **** 0x0C,
  45:Core/Src/FloatToChar.c **** 0x08
  46:Core/Src/FloatToChar.c **** };
  47:Core/Src/FloatToChar.c **** 
  48:Core/Src/FloatToChar.c **** uint8_t five[8] = {
  49:Core/Src/FloatToChar.c **** 0x00,
  50:Core/Src/FloatToChar.c **** 0x0E,
  51:Core/Src/FloatToChar.c **** 0x11,
  52:Core/Src/FloatToChar.c **** 0x10,
  53:Core/Src/FloatToChar.c **** 0x10,
  54:Core/Src/FloatToChar.c **** 0x0F,
  55:Core/Src/FloatToChar.c **** 0x01,
  56:Core/Src/FloatToChar.c **** 0x1F
  57:Core/Src/FloatToChar.c **** };
  58:Core/Src/FloatToChar.c **** uint8_t six[8] = {
  59:Core/Src/FloatToChar.c **** 0x00,
  60:Core/Src/FloatToChar.c **** 0x0E,
  61:Core/Src/FloatToChar.c **** 0x11,
  62:Core/Src/FloatToChar.c **** 0x11,
  63:Core/Src/FloatToChar.c **** 0x0F,
  64:Core/Src/FloatToChar.c **** 0x01,
  65:Core/Src/FloatToChar.c **** 0x02,
  66:Core/Src/FloatToChar.c **** 0x0C
  67:Core/Src/FloatToChar.c **** };
  68:Core/Src/FloatToChar.c **** uint8_t seven[8] = {
  69:Core/Src/FloatToChar.c **** 0x00,
  70:Core/Src/FloatToChar.c **** 0x02,
  71:Core/Src/FloatToChar.c **** 0x02,
  72:Core/Src/FloatToChar.c **** 0x02,
  73:Core/Src/FloatToChar.c **** 0x04,
  74:Core/Src/FloatToChar.c **** 0x08,
  75:Core/Src/FloatToChar.c **** 0x11,
  76:Core/Src/FloatToChar.c **** 0x1F
  77:Core/Src/FloatToChar.c **** };
  78:Core/Src/FloatToChar.c **** uint8_t nine[8] = {
  79:Core/Src/FloatToChar.c **** 0x00,
  80:Core/Src/FloatToChar.c **** 0x06,
  81:Core/Src/FloatToChar.c **** 0x08,
  82:Core/Src/FloatToChar.c **** 0x10,
  83:Core/Src/FloatToChar.c **** 0x1E,
  84:Core/Src/FloatToChar.c **** 0x11,
  85:Core/Src/FloatToChar.c **** 0x11,
  86:Core/Src/FloatToChar.c **** 0x0E
  87:Core/Src/FloatToChar.c **** };
ARM GAS  C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s 			page 3


  88:Core/Src/FloatToChar.c **** uint8_t em[8] = {
  89:Core/Src/FloatToChar.c **** 0x00,
  90:Core/Src/FloatToChar.c **** 0x06,
  91:Core/Src/FloatToChar.c **** 0x08,
  92:Core/Src/FloatToChar.c **** 0x10,
  93:Core/Src/FloatToChar.c **** 0x1E,
  94:Core/Src/FloatToChar.c **** 0x11,
  95:Core/Src/FloatToChar.c **** 0x11,
  96:Core/Src/FloatToChar.c **** 0x0E
  97:Core/Src/FloatToChar.c **** };
  98:Core/Src/FloatToChar.c **** uint8_t eee[8] = {
  99:Core/Src/FloatToChar.c **** 0x00,
 100:Core/Src/FloatToChar.c **** 0x1F,
 101:Core/Src/FloatToChar.c **** 0x01,
 102:Core/Src/FloatToChar.c **** 0x01,
 103:Core/Src/FloatToChar.c **** 0x0F,
 104:Core/Src/FloatToChar.c **** 0x01,
 105:Core/Src/FloatToChar.c **** 0x01,
 106:Core/Src/FloatToChar.c **** 0x1F
 107:Core/Src/FloatToChar.c **** };
 108:Core/Src/FloatToChar.c **** uint8_t tee[8] = {
 109:Core/Src/FloatToChar.c **** 0x00,
 110:Core/Src/FloatToChar.c **** 0x04,
 111:Core/Src/FloatToChar.c **** 0x04,
 112:Core/Src/FloatToChar.c **** 0x04,
 113:Core/Src/FloatToChar.c **** 0x04,
 114:Core/Src/FloatToChar.c **** 0x04,
 115:Core/Src/FloatToChar.c **** 0x04,
 116:Core/Src/FloatToChar.c **** 0x1F
 117:Core/Src/FloatToChar.c **** };
 118:Core/Src/FloatToChar.c **** 
 119:Core/Src/FloatToChar.c **** //want to take the floating point rounded to 2 decimal places
 120:Core/Src/FloatToChar.c **** //and convert it to char to be printed to the lcd
 121:Core/Src/FloatToChar.c **** //This can be done by add the float to '0'
 122:Core/Src/FloatToChar.c **** uint8_t* specialchars[13] = {NULL,one,two,three,four,five,six,seven,NULL,nine,tee,eee,em};
 123:Core/Src/FloatToChar.c **** //call in main
 124:Core/Src/FloatToChar.c **** void initialize()
 125:Core/Src/FloatToChar.c **** {
  29              		.loc 1 125 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
 126:Core/Src/FloatToChar.c ****         createChar(5,specialchars[10]);
  38              		.loc 1 126 9 view .LVU1
  39 0002 074C     		ldr	r4, .L3
  40 0004 A16A     		ldr	r1, [r4, #40]
  41 0006 0520     		movs	r0, #5
  42 0008 FFF7FEFF 		bl	createChar
  43              	.LVL0:
 127:Core/Src/FloatToChar.c ****         createChar(6,specialchars[11]);
  44              		.loc 1 127 9 view .LVU2
  45 000c E16A     		ldr	r1, [r4, #44]
ARM GAS  C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s 			page 4


  46 000e 0620     		movs	r0, #6
  47 0010 FFF7FEFF 		bl	createChar
  48              	.LVL1:
 128:Core/Src/FloatToChar.c ****         createChar(7,specialchars[12]);
  49              		.loc 1 128 9 view .LVU3
  50 0014 216B     		ldr	r1, [r4, #48]
  51 0016 0720     		movs	r0, #7
  52 0018 FFF7FEFF 		bl	createChar
  53              	.LVL2:
 129:Core/Src/FloatToChar.c **** }
  54              		.loc 1 129 1 is_stmt 0 view .LVU4
  55 001c 10BD     		pop	{r4, pc}
  56              	.L4:
  57 001e 00BF     		.align	2
  58              	.L3:
  59 0020 00000000 		.word	.LANCHOR0
  60              		.cfi_endproc
  61              	.LFE133:
  63              		.global	__aeabi_i2d
  64              		.global	__aeabi_ddiv
  65              		.global	__aeabi_dcmpge
  66              		.global	__aeabi_d2iz
  67              		.section	.text.float_char,"ax",%progbits
  68              		.align	1
  69              		.global	float_char
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	float_char:
  76              	.LVL3:
  77              	.LFB134:
 130:Core/Src/FloatToChar.c **** 
 131:Core/Src/FloatToChar.c **** void float_char(char *buff, float y, int z)
 132:Core/Src/FloatToChar.c **** {
  78              		.loc 1 132 1 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		.loc 1 132 1 is_stmt 0 view .LVU6
  83 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  84              	.LCFI1:
  85              		.cfi_def_cfa_offset 32
  86              		.cfi_offset 4, -32
  87              		.cfi_offset 5, -28
  88              		.cfi_offset 6, -24
  89              		.cfi_offset 7, -20
  90              		.cfi_offset 8, -16
  91              		.cfi_offset 9, -12
  92              		.cfi_offset 10, -8
  93              		.cfi_offset 14, -4
  94 0004 8146     		mov	r9, r0
  95 0006 8846     		mov	r8, r1
 133:Core/Src/FloatToChar.c ****     //deal with decimals and units in front of decimal point
 134:Core/Src/FloatToChar.c ****     //decimals
 135:Core/Src/FloatToChar.c ****     int dec; 
  96              		.loc 1 135 5 is_stmt 1 view .LVU7
ARM GAS  C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s 			page 5


 136:Core/Src/FloatToChar.c ****     //units in front of decimal
 137:Core/Src/FloatToChar.c ****     int units;
  97              		.loc 1 137 5 view .LVU8
 138:Core/Src/FloatToChar.c ****     //have to consider negative floats as well 
 139:Core/Src/FloatToChar.c ****     //dealing with floats from -99->99
 140:Core/Src/FloatToChar.c ****     //dealing with units left of decimal first positive and negative
 141:Core/Src/FloatToChar.c ****     if(y<0)
  98              		.loc 1 141 5 view .LVU9
  99              		.loc 1 141 7 is_stmt 0 view .LVU10
 100 0008 B5EEC00A 		vcmpe.f32	s0, #0
 101 000c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 102 0010 30D4     		bmi	.L23
 142:Core/Src/FloatToChar.c ****     {
 143:Core/Src/FloatToChar.c ****         //only want to deal with max 4 digits
 144:Core/Src/FloatToChar.c ****         dec = ((int)(y*-100))%100;
 145:Core/Src/FloatToChar.c ****         units = (int)(y*-1);
 146:Core/Src/FloatToChar.c ****         *buff++ = '-';
 147:Core/Src/FloatToChar.c ****     }
 148:Core/Src/FloatToChar.c ****     else 
 149:Core/Src/FloatToChar.c ****     {
 150:Core/Src/FloatToChar.c ****         dec = ((int)(y*100))%100;
 103              		.loc 1 150 9 is_stmt 1 view .LVU11
 104              		.loc 1 150 23 is_stmt 0 view .LVU12
 105 0012 DFED5B7A 		vldr.32	s15, .L26+8
 106 0016 60EE277A 		vmul.f32	s15, s0, s15
 107              		.loc 1 150 16 view .LVU13
 108 001a FDEEE77A 		vcvt.s32.f32	s15, s15
 109 001e 17EE903A 		vmov	r3, s15	@ int
 110              		.loc 1 150 13 view .LVU14
 111 0022 584A     		ldr	r2, .L26+12
 112 0024 82FB0312 		smull	r1, r2, r2, r3
 113              	.LVL4:
 114              		.loc 1 150 13 view .LVU15
 115 0028 DF17     		asrs	r7, r3, #31
 116 002a C7EB6217 		rsb	r7, r7, r2, asr #5
 117 002e 6422     		movs	r2, #100
 118 0030 02FB1737 		mls	r7, r2, r7, r3
 119              	.LVL5:
 151:Core/Src/FloatToChar.c ****         units = (int)(y*1);
 120              		.loc 1 151 9 is_stmt 1 view .LVU16
 121              		.loc 1 151 15 is_stmt 0 view .LVU17
 122 0034 FDEEC07A 		vcvt.s32.f32	s15, s0
 123 0038 17EE906A 		vmov	r6, s15	@ int
 124              	.LVL6:
 125              	.L8:
 152:Core/Src/FloatToChar.c ****     }
 153:Core/Src/FloatToChar.c ****     //only need 4 values, easiest way to do this is line by line since looking for specific output.
 154:Core/Src/FloatToChar.c ****     //*buff++ == assign value to dereferenced pointer then increment pointer
 155:Core/Src/FloatToChar.c ****     int i = 0;
 126              		.loc 1 155 5 is_stmt 1 view .LVU18
 156:Core/Src/FloatToChar.c ****     while((units/pow(10,i))>=1)
 127              		.loc 1 156 5 view .LVU19
 155:Core/Src/FloatToChar.c ****     while((units/pow(10,i))>=1)
 128              		.loc 1 155 9 is_stmt 0 view .LVU20
 129 003c 4FF0000A 		mov	r10, #0
 130              	.LVL7:
 131              	.L9:
ARM GAS  C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s 			page 6


 132              		.loc 1 156 10 is_stmt 1 view .LVU21
 133              		.loc 1 156 18 is_stmt 0 view .LVU22
 134 0040 5046     		mov	r0, r10
 135 0042 FFF7FEFF 		bl	__aeabi_i2d
 136              	.LVL8:
 137 0046 41EC110B 		vmov	d1, r0, r1
 138 004a 9FED4B0B 		vldr.64	d0, .L26
 139 004e FFF7FEFF 		bl	pow
 140              	.LVL9:
 141 0052 55EC104B 		vmov	r4, r5, d0
 142              		.loc 1 156 17 view .LVU23
 143 0056 3046     		mov	r0, r6
 144 0058 FFF7FEFF 		bl	__aeabi_i2d
 145              	.LVL10:
 146 005c 2246     		mov	r2, r4
 147 005e 2B46     		mov	r3, r5
 148 0060 FFF7FEFF 		bl	__aeabi_ddiv
 149              	.LVL11:
 150              		.loc 1 156 10 view .LVU24
 151 0064 0022     		movs	r2, #0
 152 0066 484B     		ldr	r3, .L26+16
 153 0068 FFF7FEFF 		bl	__aeabi_dcmpge
 154              	.LVL12:
 155 006c E8B1     		cbz	r0, .L24
 157:Core/Src/FloatToChar.c ****     {
 158:Core/Src/FloatToChar.c ****         i++;
 156              		.loc 1 158 9 is_stmt 1 view .LVU25
 157              		.loc 1 158 10 is_stmt 0 view .LVU26
 158 006e 0AF1010A 		add	r10, r10, #1
 159              	.LVL13:
 160              		.loc 1 158 10 view .LVU27
 161 0072 E5E7     		b	.L9
 162              	.LVL14:
 163              	.L23:
 144:Core/Src/FloatToChar.c ****         units = (int)(y*-1);
 164              		.loc 1 144 9 is_stmt 1 view .LVU28
 144:Core/Src/FloatToChar.c ****         units = (int)(y*-1);
 165              		.loc 1 144 23 is_stmt 0 view .LVU29
 166 0074 DFED457A 		vldr.32	s15, .L26+20
 167 0078 60EE277A 		vmul.f32	s15, s0, s15
 144:Core/Src/FloatToChar.c ****         units = (int)(y*-1);
 168              		.loc 1 144 16 view .LVU30
 169 007c FDEEE77A 		vcvt.s32.f32	s15, s15
 170 0080 17EE903A 		vmov	r3, s15	@ int
 144:Core/Src/FloatToChar.c ****         units = (int)(y*-1);
 171              		.loc 1 144 13 view .LVU31
 172 0084 3F4A     		ldr	r2, .L26+12
 173 0086 82FB0312 		smull	r1, r2, r2, r3
 174              	.LVL15:
 144:Core/Src/FloatToChar.c ****         units = (int)(y*-1);
 175              		.loc 1 144 13 view .LVU32
 176 008a DF17     		asrs	r7, r3, #31
 177 008c C7EB6217 		rsb	r7, r7, r2, asr #5
 178 0090 6422     		movs	r2, #100
 179 0092 02FB1737 		mls	r7, r2, r7, r3
 180              	.LVL16:
 145:Core/Src/FloatToChar.c ****         *buff++ = '-';
ARM GAS  C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s 			page 7


 181              		.loc 1 145 9 is_stmt 1 view .LVU33
 145:Core/Src/FloatToChar.c ****         *buff++ = '-';
 182              		.loc 1 145 24 is_stmt 0 view .LVU34
 183 0096 B1EE400A 		vneg.f32	s0, s0
 184              	.LVL17:
 145:Core/Src/FloatToChar.c ****         *buff++ = '-';
 185              		.loc 1 145 15 view .LVU35
 186 009a FDEEC07A 		vcvt.s32.f32	s15, s0
 187 009e 17EE906A 		vmov	r6, s15	@ int
 188              	.LVL18:
 146:Core/Src/FloatToChar.c ****     }
 189              		.loc 1 146 9 is_stmt 1 view .LVU36
 146:Core/Src/FloatToChar.c ****     }
 190              		.loc 1 146 17 is_stmt 0 view .LVU37
 191 00a2 2D23     		movs	r3, #45
 192 00a4 09F8013B 		strb	r3, [r9], #1
 193              	.LVL19:
 146:Core/Src/FloatToChar.c ****     }
 194              		.loc 1 146 17 view .LVU38
 195 00a8 C8E7     		b	.L8
 196              	.LVL20:
 197              	.L24:
 159:Core/Src/FloatToChar.c ****     }
 160:Core/Src/FloatToChar.c ****     i--;
 198              		.loc 1 160 5 is_stmt 1 view .LVU39
 199              		.loc 1 160 6 is_stmt 0 view .LVU40
 200 00aa 0AF1FF3A 		add	r10, r10, #-1
 201              	.LVL21:
 161:Core/Src/FloatToChar.c ****     while(i>=0)
 202              		.loc 1 161 5 is_stmt 1 view .LVU41
 203              		.loc 1 161 10 is_stmt 0 view .LVU42
 204 00ae 1DE0     		b	.L11
 205              	.L12:
 162:Core/Src/FloatToChar.c ****     {
 163:Core/Src/FloatToChar.c ****         *buff++= (units/(int)pow(10,i))%10 + '0';
 206              		.loc 1 163 9 is_stmt 1 view .LVU43
 207              		.loc 1 163 30 is_stmt 0 view .LVU44
 208 00b0 5046     		mov	r0, r10
 209 00b2 FFF7FEFF 		bl	__aeabi_i2d
 210              	.LVL22:
 211 00b6 41EC110B 		vmov	d1, r0, r1
 212 00ba 9FED2F0B 		vldr.64	d0, .L26
 213 00be FFF7FEFF 		bl	pow
 214              	.LVL23:
 215 00c2 51EC100B 		vmov	r0, r1, d0
 216              		.loc 1 163 25 view .LVU45
 217 00c6 FFF7FEFF 		bl	__aeabi_d2iz
 218              	.LVL24:
 219              		.loc 1 163 24 view .LVU46
 220 00ca 96FBF0F0 		sdiv	r0, r6, r0
 221              		.loc 1 163 40 view .LVU47
 222 00ce 304A     		ldr	r2, .L26+24
 223 00d0 82FB0032 		smull	r3, r2, r2, r0
 224 00d4 C317     		asrs	r3, r0, #31
 225 00d6 C3EBA203 		rsb	r3, r3, r2, asr #2
 226 00da 03EB8303 		add	r3, r3, r3, lsl #2
 227 00de A0EB4303 		sub	r3, r0, r3, lsl #1
ARM GAS  C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s 			page 8


 228              	.LVL25:
 229              		.loc 1 163 44 view .LVU48
 230 00e2 3033     		adds	r3, r3, #48
 231              		.loc 1 163 16 view .LVU49
 232 00e4 09F8013B 		strb	r3, [r9], #1
 233              	.LVL26:
 164:Core/Src/FloatToChar.c ****         i--;
 234              		.loc 1 164 9 is_stmt 1 view .LVU50
 235              		.loc 1 164 10 is_stmt 0 view .LVU51
 236 00e8 0AF1FF3A 		add	r10, r10, #-1
 237              	.LVL27:
 238              	.L11:
 161:Core/Src/FloatToChar.c ****     while(i>=0)
 239              		.loc 1 161 10 is_stmt 1 view .LVU52
 240 00ec BAF1000F 		cmp	r10, #0
 241 00f0 DEDA     		bge	.L12
 165:Core/Src/FloatToChar.c ****     }
 166:Core/Src/FloatToChar.c ****         *buff++='.';
 242              		.loc 1 166 9 view .LVU53
 243              	.LVL28:
 244              		.loc 1 166 16 is_stmt 0 view .LVU54
 245 00f2 2E23     		movs	r3, #46
 246 00f4 89F80030 		strb	r3, [r9]
 167:Core/Src/FloatToChar.c ****         *buff++=(dec/10)%10 + '0';
 247              		.loc 1 167 9 is_stmt 1 view .LVU55
 248              		.loc 1 167 21 is_stmt 0 view .LVU56
 249 00f8 254B     		ldr	r3, .L26+24
 250 00fa 83FB0721 		smull	r2, r1, r3, r7
 251 00fe FA17     		asrs	r2, r7, #31
 252 0100 C2EBA102 		rsb	r2, r2, r1, asr #2
 253              		.loc 1 167 25 view .LVU57
 254 0104 83FB0231 		smull	r3, r1, r3, r2
 255 0108 D317     		asrs	r3, r2, #31
 256 010a C3EBA103 		rsb	r3, r3, r1, asr #2
 257 010e 03EB8303 		add	r3, r3, r3, lsl #2
 258 0112 A2EB4303 		sub	r3, r2, r3, lsl #1
 259              	.LVL29:
 260              		.loc 1 167 29 view .LVU58
 261 0116 3033     		adds	r3, r3, #48
 262              		.loc 1 167 16 view .LVU59
 263 0118 89F80130 		strb	r3, [r9, #1]
 168:Core/Src/FloatToChar.c ****         *buff++=dec%10 + '0';
 264              		.loc 1 168 9 is_stmt 1 view .LVU60
 265              		.loc 1 168 20 is_stmt 0 view .LVU61
 266 011c 02EB8202 		add	r2, r2, r2, lsl #2
 267 0120 A7EB4202 		sub	r2, r7, r2, lsl #1
 268              	.LVL30:
 269              		.loc 1 168 24 view .LVU62
 270 0124 3032     		adds	r2, r2, #48
 271              		.loc 1 168 16 view .LVU63
 272 0126 89F80220 		strb	r2, [r9, #2]
 169:Core/Src/FloatToChar.c ****         *buff++='\0';
 273              		.loc 1 169 9 is_stmt 1 view .LVU64
 274              		.loc 1 169 14 is_stmt 0 view .LVU65
 275 012a 09F10405 		add	r5, r9, #4
 276              	.LVL31:
 277              		.loc 1 169 16 view .LVU66
ARM GAS  C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s 			page 9


 278 012e 0023     		movs	r3, #0
 279 0130 89F80330 		strb	r3, [r9, #3]
 170:Core/Src/FloatToChar.c **** 
 171:Core/Src/FloatToChar.c ****     
 172:Core/Src/FloatToChar.c ****     if(z==1)
 280              		.loc 1 172 5 is_stmt 1 view .LVU67
 281              		.loc 1 172 7 is_stmt 0 view .LVU68
 282 0134 B8F1010F 		cmp	r8, #1
 283 0138 1AD0     		beq	.L25
 284              	.LVL32:
 285              	.L5:
 173:Core/Src/FloatToChar.c ****     {
 174:Core/Src/FloatToChar.c ****         i=0;
 175:Core/Src/FloatToChar.c ****         int r=0;
 176:Core/Src/FloatToChar.c ****         while(i<=4)
 177:Core/Src/FloatToChar.c ****         {
 178:Core/Src/FloatToChar.c ****             if(buff[i]=='8' || buff[i]=='0' || buff[i]== '.')
 179:Core/Src/FloatToChar.c ****             {
 180:Core/Src/FloatToChar.c ****                 write(buff[i]);
 181:Core/Src/FloatToChar.c ****             }
 182:Core/Src/FloatToChar.c ****             else
 183:Core/Src/FloatToChar.c ****             {
 184:Core/Src/FloatToChar.c ****                 createChar(r,specialchars[(int)(buff[i]-'0')]);
 185:Core/Src/FloatToChar.c ****                 write(r);
 186:Core/Src/FloatToChar.c ****                 r++;
 187:Core/Src/FloatToChar.c ****             }
 188:Core/Src/FloatToChar.c ****             
 189:Core/Src/FloatToChar.c ****             i++;
 190:Core/Src/FloatToChar.c ****         } 
 191:Core/Src/FloatToChar.c ****     }
 192:Core/Src/FloatToChar.c **** }...
 286              		.loc 1 192 1 view .LVU69
 287 013a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 288              	.LVL33:
 289              	.L15:
 290              	.LBB2:
 180:Core/Src/FloatToChar.c ****                 write(buff[i]);
 291              		.loc 1 180 17 is_stmt 1 view .LVU70
 292 013e FFF7FEFF 		bl	write
 293              	.LVL34:
 294              	.L17:
 189:Core/Src/FloatToChar.c ****             i++;
 295              		.loc 1 189 13 view .LVU71
 189:Core/Src/FloatToChar.c ****             i++;
 296              		.loc 1 189 14 is_stmt 0 view .LVU72
 297 0142 0134     		adds	r4, r4, #1
 298              	.LVL35:
 299              	.L13:
 176:Core/Src/FloatToChar.c ****         while(i<=4)
 300              		.loc 1 176 14 is_stmt 1 view .LVU73
 301 0144 042C     		cmp	r4, #4
 302 0146 F8DC     		bgt	.L5
 178:Core/Src/FloatToChar.c ****             if(buff[i]=='8' || buff[i]=='0' || buff[i]== '.')
 303              		.loc 1 178 13 view .LVU74
 178:Core/Src/FloatToChar.c ****             if(buff[i]=='8' || buff[i]=='0' || buff[i]== '.')
 304              		.loc 1 178 20 is_stmt 0 view .LVU75
 305 0148 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
ARM GAS  C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s 			page 10


 178:Core/Src/FloatToChar.c ****             if(buff[i]=='8' || buff[i]=='0' || buff[i]== '.')
 306              		.loc 1 178 15 view .LVU76
 307 014a 3828     		cmp	r0, #56
 308 014c F7D0     		beq	.L15
 178:Core/Src/FloatToChar.c ****             if(buff[i]=='8' || buff[i]=='0' || buff[i]== '.')
 309              		.loc 1 178 29 discriminator 1 view .LVU77
 310 014e 3028     		cmp	r0, #48
 311 0150 F5D0     		beq	.L15
 178:Core/Src/FloatToChar.c ****             if(buff[i]=='8' || buff[i]=='0' || buff[i]== '.')
 312              		.loc 1 178 45 discriminator 2 view .LVU78
 313 0152 2E28     		cmp	r0, #46
 314 0154 F3D0     		beq	.L15
 184:Core/Src/FloatToChar.c ****                 createChar(r,specialchars[(int)(buff[i]-'0')]);
 315              		.loc 1 184 17 is_stmt 1 view .LVU79
 316 0156 F7B2     		uxtb	r7, r6
 184:Core/Src/FloatToChar.c ****                 createChar(r,specialchars[(int)(buff[i]-'0')]);
 317              		.loc 1 184 43 is_stmt 0 view .LVU80
 318 0158 3038     		subs	r0, r0, #48
 184:Core/Src/FloatToChar.c ****                 createChar(r,specialchars[(int)(buff[i]-'0')]);
 319              		.loc 1 184 17 view .LVU81
 320 015a 0E4B     		ldr	r3, .L26+28
 321 015c 53F82010 		ldr	r1, [r3, r0, lsl #2]
 322 0160 3846     		mov	r0, r7
 323 0162 FFF7FEFF 		bl	createChar
 324              	.LVL36:
 185:Core/Src/FloatToChar.c ****                 write(r);
 325              		.loc 1 185 17 is_stmt 1 view .LVU82
 326 0166 3846     		mov	r0, r7
 327 0168 FFF7FEFF 		bl	write
 328              	.LVL37:
 186:Core/Src/FloatToChar.c ****                 r++;
 329              		.loc 1 186 17 view .LVU83
 186:Core/Src/FloatToChar.c ****                 r++;
 330              		.loc 1 186 18 is_stmt 0 view .LVU84
 331 016c 0136     		adds	r6, r6, #1
 332              	.LVL38:
 186:Core/Src/FloatToChar.c ****                 r++;
 333              		.loc 1 186 18 view .LVU85
 334 016e E8E7     		b	.L17
 335              	.LVL39:
 336              	.L25:
 175:Core/Src/FloatToChar.c ****         int r=0;
 337              		.loc 1 175 13 view .LVU86
 338 0170 0026     		movs	r6, #0
 339              	.LVL40:
 174:Core/Src/FloatToChar.c ****         i=0;
 340              		.loc 1 174 10 view .LVU87
 341 0172 3446     		mov	r4, r6
 342 0174 E6E7     		b	.L13
 343              	.L27:
 344 0176 00BF     		.align	3
 345              	.L26:
 346 0178 00000000 		.word	0
 347 017c 00002440 		.word	1076101120
 348 0180 0000C842 		.word	1120403456
 349 0184 1F85EB51 		.word	1374389535
 350 0188 0000F03F 		.word	1072693248
ARM GAS  C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s 			page 11


 351 018c 0000C8C2 		.word	-1027080192
 352 0190 67666666 		.word	1717986919
 353 0194 00000000 		.word	.LANCHOR0
 354              	.LBE2:
 355              		.cfi_endproc
 356              	.LFE134:
 358              		.global	specialchars
 359              		.global	tee
 360              		.global	eee
 361              		.global	em
 362              		.global	nine
 363              		.global	seven
 364              		.global	six
 365              		.global	five
 366              		.global	four
 367              		.global	three
 368              		.global	two
 369              		.global	one
 370              		.section	.data.eee,"aw"
 371              		.align	2
 374              	eee:
 375 0000 001F0101 		.ascii	"\000\037\001\001\017\001\001\037"
 375      0F01011F 
 376              		.section	.data.em,"aw"
 377              		.align	2
 380              	em:
 381 0000 00060810 		.ascii	"\000\006\010\020\036\021\021\016"
 381      1E11110E 
 382              		.section	.data.five,"aw"
 383              		.align	2
 386              	five:
 387 0000 000E1110 		.ascii	"\000\016\021\020\020\017\001\037"
 387      100F011F 
 388              		.section	.data.four,"aw"
 389              		.align	2
 392              	four:
 393 0000 0008081F 		.ascii	"\000\010\010\037\011\012\014\010"
 393      090A0C08 
 394              		.section	.data.nine,"aw"
 395              		.align	2
 398              	nine:
 399 0000 00060810 		.ascii	"\000\006\010\020\036\021\021\016"
 399      1E11110E 
 400              		.section	.data.one,"aw"
 401              		.align	2
 404              	one:
 405 0000 000E0404 		.ascii	"\000\016\004\004\004\004\005\004"
 405      04040504 
 406              		.section	.data.seven,"aw"
 407              		.align	2
 410              	seven:
 411 0000 00020202 		.ascii	"\000\002\002\002\004\010\021\037"
 411      0408111F 
 412              		.section	.data.six,"aw"
 413              		.align	2
 416              	six:
 417 0000 000E1111 		.ascii	"\000\016\021\021\017\001\002\014"
ARM GAS  C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s 			page 12


 417      0F01020C 
 418              		.section	.data.specialchars,"aw"
 419              		.align	2
 420              		.set	.LANCHOR0,. + 0
 423              	specialchars:
 424 0000 00000000 		.word	0
 425 0004 00000000 		.word	one
 426 0008 00000000 		.word	two
 427 000c 00000000 		.word	three
 428 0010 00000000 		.word	four
 429 0014 00000000 		.word	five
 430 0018 00000000 		.word	six
 431 001c 00000000 		.word	seven
 432 0020 00000000 		.word	0
 433 0024 00000000 		.word	nine
 434 0028 00000000 		.word	tee
 435 002c 00000000 		.word	eee
 436 0030 00000000 		.word	em
 437              		.section	.data.tee,"aw"
 438              		.align	2
 441              	tee:
 442 0000 00040404 		.ascii	"\000\004\004\004\004\004\004\037"
 442      0404041F 
 443              		.section	.data.three,"aw"
 444              		.align	2
 447              	three:
 448 0000 000D2010 		.ascii	"\000\015 \020\010\004\010\037"
 448      0804081F 
 449              		.section	.data.two,"aw"
 450              		.align	2
 453              	two:
 454 0000 001F0204 		.ascii	"\000\037\002\004\010\020\021\016"
 454      0810110E 
 455              		.text
 456              	.Letext0:
 457              		.file 2 "c:\\stm32projects\\toolchain\\gcc-arm\\arm-none-eabi\\include\\machine\\_default_types.h"
 458              		.file 3 "c:\\stm32projects\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\9.3.1\\include\\stddef.h"
 459              		.file 4 "c:\\stm32projects\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_types.h"
 460              		.file 5 "c:\\stm32projects\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\reent.h"
 461              		.file 6 "c:\\stm32projects\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\lock.h"
 462              		.file 7 "c:\\stm32projects\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_stdint.h"
 463              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
 464              		.file 9 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 465              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 466              		.file 11 "c:\\stm32projects\\toolchain\\gcc-arm\\arm-none-eabi\\include\\math.h"
 467              		.file 12 "Core/Inc/LiquidCrystal.h"
ARM GAS  C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 FloatToChar.c
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:18     .text.initialize:00000000 $t
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:26     .text.initialize:00000000 initialize
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:59     .text.initialize:00000020 $d
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:68     .text.float_char:00000000 $t
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:75     .text.float_char:00000000 float_char
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:346    .text.float_char:00000178 $d
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:423    .data.specialchars:00000000 specialchars
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:441    .data.tee:00000000 tee
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:374    .data.eee:00000000 eee
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:380    .data.em:00000000 em
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:398    .data.nine:00000000 nine
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:410    .data.seven:00000000 seven
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:416    .data.six:00000000 six
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:386    .data.five:00000000 five
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:392    .data.four:00000000 four
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:447    .data.three:00000000 three
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:453    .data.two:00000000 two
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:404    .data.one:00000000 one
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:371    .data.eee:00000000 $d
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:377    .data.em:00000000 $d
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:383    .data.five:00000000 $d
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:389    .data.four:00000000 $d
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:395    .data.nine:00000000 $d
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:401    .data.one:00000000 $d
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:407    .data.seven:00000000 $d
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:413    .data.six:00000000 $d
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:419    .data.specialchars:00000000 $d
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:438    .data.tee:00000000 $d
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:444    .data.three:00000000 $d
C:\Users\pierc\AppData\Local\Temp\ccrdtCfl.s:450    .data.two:00000000 $d

UNDEFINED SYMBOLS
createChar
__aeabi_i2d
__aeabi_ddiv
__aeabi_dcmpge
__aeabi_d2iz
pow
write
